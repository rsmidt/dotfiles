#!/bin/zsh
# Determine OS
unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     machine=Linux;;
    Darwin*)    machine=Mac;;
    CYGWIN*)    machine=Cygwin;;
    MINGW*)     machine=MinGw;;
    *)          machine="UNKNOWN:${unameOut}"
esac

[ -f /opt/homebrew/bin/brew ] && eval "$(/opt/homebrew/bin/brew shellenv)"

# Set default project path
export PROJECT_PATH="$HOME/Projects"

# Append PATH
export PATH=$GOPATH/bin:$HOME/.local/bin:$HOME/bin:$HOME/.cargo/bin:/usr/sbin:$PATH

if [[ -d "/opt/texlive" ]]; then
    export PATH=/opt/texlive/2019/bin/x86_64-linux:$PATH
fi

if [[ -d "$HOME/.groovy" ]]; then
    export GROOVY_HOME=$HOME/.groovy
    export PATH=$HOME/.groovy/bin:$PATH
fi

# Android SDK
if [[ -d "$HOME/Android/Sdk" ]]; then
    export ANDROID_HOME=$HOME/Android/Sdk
    export PATH=$PATH:$ANDROID_HOME/emulator
    export PATH=$PATH:$ANDROID_HOME/tools
    export PATH=$PATH:$ANDROID_HOME/tools/bin
    export PATH=$PATH:$ANDROID_HOME/platform-tools
fi

# yarn bin
if type yarn >/dev/null; then
    export PATH=$PATH:$(yarn global bin)
fi

# Set key timeouet to 1 for vi mode
export KEYTIMEOUT=1

# https://discourse.brew.sh/t/failed-to-set-locale-category-lc-numeric-to-en-ru/5092/12
if [[ $machine == Mac ]]; then
    export LC_ALL=en_US.UTF-8
fi

# Default editor ist nvim
export EDITOR="nvim"

# Configure FZF to use Ripgrep
export FZF_DEFAULT_COMMAND='rg --files --hidden'

# Fix Java windows in sway
export _JAVA_AWT_WM_NONREPARENTING=1

# Fix man warnings
export MAN_POSIXLY_CORRECT=1

# Only alias open on linux
if [[ $machine == Linux ]]; then
    alias open='xdg-open'
fi

# Apply wal schemes
if type wal >/dev/null; then
     cat ~/.cache/wal/sequences
fi

# Apply pip completion only if pip is installed
if type pip >/dev/null; then
    eval "`pip completion --zsh`"
    compctl -K _pip_completion pip3
fi

if type fnm >/dev/null; then
    eval "$(fnm env)"
fi

# Use gpg-agent for instead of the default ssh-agent
export GPG_TTY="$(tty)"
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch gpg-agent
gpg-connect-agent updatestartuptty /bye > /dev/null

typeset -aU path

# FZF
if [[ -f /usr/share/fzf/key-bindings.zsh ]]; then
    source /usr/share/fzf/key-bindings.zsh
    source /usr/share/fzf/completion.zsh
fi

if [[ $machine == Mac && ! -f ~/.fzf.zsh ]]; then
    printf "There are no fzf completions installed. You should run %s\n" "$(brew --prefix)/opt/fzf/install"
    printf "They should be instaleld to ~/.fzf.zsh\n"
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f /etc/zsh_completion.d/fzf-key-bindings ] && source /etc/zsh_completion.d/fzf-key-bindings

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

if type ng >/dev/null; then
    # Load Angular CLI autocompletion.
    source <(ng completion script)
fi

# Taken from https://koenwoortman.com/zsh-split-zshrc-into-multiple-files/
for conf in "$HOME/.config/zsh/conf.d/"*.zsh; do
    source "${conf}"
done
unset conf

